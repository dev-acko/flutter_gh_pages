name: Flutter Size Check

on:
  push:
    branches: [main]
  pull_request:

jobs:
  size-check:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: testingghpages

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # get previous commit for diff

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Build APK (release)
        run: flutter build apk --release

      - name: Get APK size
        id: apk_size
        run: |
          APK_PATH=$(find build/app/outputs/flutter-apk/ -name "*.apk" | head -n 1)
          SIZE=$(stat -c %s "$APK_PATH")
          echo "apk_size=$SIZE" >> $GITHUB_OUTPUT
          echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT

      - name: Gather commit info
        id: commit_info
        run: |
          COMMIT=$(git rev-parse HEAD)
          MESSAGE=$(git log -1 --pretty=%B | tr -d '\n')
          DATE=$(git log -1 --pretty=%cd --date=short)
          COMMITTER=$(git log -1 --pretty=%an)
          TAG=$(git describe --tags --exact-match $COMMIT 2>/dev/null || echo null)
          IS_RELEASE=false
          if [ "$TAG" != "null" ]; then IS_RELEASE=true; fi
          echo "commit=$COMMIT" >> $GITHUB_OUTPUT
          echo "commitMessage=$MESSAGE" >> $GITHUB_OUTPUT
          echo "date=$DATE" >> $GITHUB_OUTPUT
          echo "committer=$COMMITTER" >> $GITHUB_OUTPUT
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "isRelease=$IS_RELEASE" >> $GITHUB_OUTPUT

      - name: Download and update app_size.json
        run: |
          cd ..
          JSON_FILE="docs/app_size.json"
          if [ ! -f "$JSON_FILE" ]; then echo "[]" > "$JSON_FILE"; fi

          # Get previous size for diff
          PREV_SIZE=$(jq '.[0].size // 0' "$JSON_FILE")
          SIZE_DIFF=$((${{
            steps.apk_size.outputs.apk_size
          }} - $PREV_SIZE))

          # Create new entry
          jq --arg commit "${{ steps.commit_info.outputs.commit }}" \
             --arg commitMessage "${{ steps.commit_info.outputs.commitMessage }}" \
             --arg date "${{ steps.commit_info.outputs.date }}" \
             --argjson size ${{ steps.apk_size.outputs.apk_size }} \
             --argjson sizeDiff $SIZE_DIFF \
             --arg committer "${{ steps.commit_info.outputs.committer }}" \
             --argjson isRelease "${{ steps.commit_info.outputs.isRelease }}" \
             --arg tag "${{ steps.commit_info.outputs.tag }}" \
             '. | [{"commit": $commit, "commitMessage": $commitMessage, "date": $date, "size": $size, "sizeDiff": $sizeDiff, "committer": $committer, "isRelease": $isRelease, "tag": ($tag == "null" ? null : $tag)}] + .' \
             "$JSON_FILE" > tmp.json && mv tmp.json "$JSON_FILE"

      - name: Commit and push app_size.json
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update app_size.json [ci skip]"
          file_pattern: docs/app_size.json